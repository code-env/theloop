generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  userId      String        @unique
  username    String        @unique
  email       String        @unique
  password    String?
  isOboarded  Boolean       @default(false)
  imageUrl    String
  // phone       Int
  Communities Communities[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Communities {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  inviteCode String
  userId     String @db.ObjectId
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
}

model Members {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model WaitList {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String
  email     String
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Goals {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  dateCreated String @db.ObjectId
  goal        Goal   @relation(fields: [dateCreated], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([dateCreated])
}

model Goal {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Goals     Goals[]
  goalId    String?  @db.ObjectId
}

// id String @id @default(auto()) @map("_id") @db.ObjectId

// createdAt DateTime @default(now())
// updatedAt DateTime @updatedAt
